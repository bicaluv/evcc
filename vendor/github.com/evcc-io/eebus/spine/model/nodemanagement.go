// Package ns_p contains models for http://docs.eebus.org/spine/xsd/v1
package model

// Code generated by github.com/andig/xsd2go. DO NOT EDIT.

import "github.com/evcc-io/eebus/util"

// NodeManagementSpecificationVersionListType complex type
type NodeManagementSpecificationVersionListType struct {
	SpecificationVersion []SpecificationVersionDataType `json:"specificationVersion,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementSpecificationVersionListType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementSpecificationVersionListType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementDetailedDiscoveryDeviceInformationType complex type
type NodeManagementDetailedDiscoveryDeviceInformationType struct {
	Description *NetworkManagementDeviceDescriptionDataType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDetailedDiscoveryDeviceInformationType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDetailedDiscoveryDeviceInformationType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementDetailedDiscoveryEntityInformationType complex type
type NodeManagementDetailedDiscoveryEntityInformationType struct {
	Description *NetworkManagementEntityDescriptionDataType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDetailedDiscoveryEntityInformationType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDetailedDiscoveryEntityInformationType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementDetailedDiscoveryFeatureInformationType complex type
type NodeManagementDetailedDiscoveryFeatureInformationType struct {
	Description *NetworkManagementFeatureDescriptionDataType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDetailedDiscoveryFeatureInformationType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDetailedDiscoveryFeatureInformationType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNodeManagementDetailedDiscoveryData message container
type CmiNodeManagementDetailedDiscoveryData struct {
	NodeManagementDetailedDiscoveryData NodeManagementDetailedDiscoveryDataType `json:"nodeManagementDetailedDiscoveryData"`
}

// NodeManagementDetailedDiscoveryDataType element
type NodeManagementDetailedDiscoveryDataType struct {
	SpecificationVersionList *NodeManagementSpecificationVersionListType             `json:"specificationVersionList,omitempty"`
	DeviceInformation        *NodeManagementDetailedDiscoveryDeviceInformationType   `json:"deviceInformation,omitempty"`
	EntityInformation        []NodeManagementDetailedDiscoveryEntityInformationType  `json:"entityInformation,omitempty"`
	FeatureInformation       []NodeManagementDetailedDiscoveryFeatureInformationType `json:"featureInformation,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDetailedDiscoveryDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDetailedDiscoveryDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementDetailedDiscoveryDataSelectorsType complex type
type NodeManagementDetailedDiscoveryDataSelectorsType struct {
	DeviceInformation  *NetworkManagementDeviceDescriptionListDataSelectorsType  `json:"deviceInformation,omitempty"`
	EntityInformation  *NetworkManagementEntityDescriptionListDataSelectorsType  `json:"entityInformation,omitempty"`
	FeatureInformation *NetworkManagementFeatureDescriptionListDataSelectorsType `json:"featureInformation,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDetailedDiscoveryDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDetailedDiscoveryDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementBindingDataType complex type
type NodeManagementBindingDataType struct {
	BindingEntry []BindingManagementEntryDataType `json:"bindingEntry,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementBindingDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementBindingDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementBindingDataSelectorsType complex type
type NodeManagementBindingDataSelectorsType struct {
	BindingEntry *BindingManagementEntryListDataSelectorsType `json:"bindingEntry,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementBindingDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementBindingDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementBindingRequestCallType complex type
type NodeManagementBindingRequestCallType struct {
	BindingRequest *BindingManagementRequestCallType `json:"bindingRequest,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementBindingRequestCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementBindingRequestCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementSubscriptionDataType complex type
type NodeManagementSubscriptionDataType struct {
	SubscriptionEntry []SubscriptionManagementEntryDataType `json:"subscriptionEntry,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementSubscriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementSubscriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementSubscriptionDataSelectorsType complex type
type NodeManagementSubscriptionDataSelectorsType struct {
	SubscriptionEntry *SubscriptionManagementEntryListDataSelectorsType `json:"subscriptionEntry,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementSubscriptionDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementSubscriptionDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementSubscriptionRequestCallType complex type
type NodeManagementSubscriptionRequestCallType struct {
	SubscriptionRequest *SubscriptionManagementRequestCallType `json:"subscriptionRequest,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementSubscriptionRequestCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementSubscriptionRequestCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementSubscriptionDeleteCallType complex type
type NodeManagementSubscriptionDeleteCallType struct {
	SubscriptionDelete *SubscriptionManagementDeleteCallType `json:"subscriptionDelete,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementSubscriptionDeleteCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementSubscriptionDeleteCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementDestinationDataType complex type
type NodeManagementDestinationDataType struct {
	DeviceDescription *NetworkManagementDeviceDescriptionDataType `json:"deviceDescription,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDestinationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDestinationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementDestinationListDataType complex type
type NodeManagementDestinationListDataType struct {
	NodeManagementDestinationData []NodeManagementDestinationDataType `json:"nodeManagementDestinationData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDestinationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDestinationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementDestinationListDataSelectorsType complex type
type NodeManagementDestinationListDataSelectorsType struct {
	DeviceDescription *NetworkManagementDeviceDescriptionListDataSelectorsType `json:"deviceDescription,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementDestinationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementDestinationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementUseCaseDataType complex type
type NodeManagementUseCaseDataType struct {
	UseCaseInformation []UseCaseInformationDataType `json:"useCaseInformation,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementUseCaseDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementUseCaseDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// NodeManagementUseCaseDataSelectorsType complex type
type NodeManagementUseCaseDataSelectorsType struct {
	UseCaseInformation *UseCaseInformationListDataSelectorsType `json:"useCaseInformation,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NodeManagementUseCaseDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NodeManagementUseCaseDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}
